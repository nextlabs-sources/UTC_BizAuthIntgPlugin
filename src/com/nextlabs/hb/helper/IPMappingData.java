package com.nextlabs.hb.helper;import java.sql.Timestamp;import java.text.MessageFormat;import java.util.ArrayList;import java.util.HashMap;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;public class IPMappingData extends DataRetrival {	private static final Log log = LogFactory.getLog(IPMappingData.class);	public IPMappingData() {		filePath = PluginConstants.INSTALL_LOC + PluginConstants.CC_ROOT				+ PluginConstants.JAR_FOLDER + PluginConstants.APP_FOLDER				+ PluginConstants.DATA_FOLDER				+ PluginConstants.IPMAPPINGFILENAME;	}	public ArrayList<HashMap<String, String>> getIPMappings() {		ArrayList<HashMap<String, String>> ipmappingData = new ArrayList<HashMap<String, String>>();		QueryResultHelper qrh = new QueryResultHelper();		qrh.setQuery(MessageFormat.format(PluginConstants.BASEQUERY,				PluginConstants.COMMON_PROPS.getProperty("table_IPMapping")));		qrh.getTableFieldList().add(				PluginConstants.COMMON_PROPS.getProperty("ipm_col_id"));		qrh.getTableFieldList().add(				PluginConstants.COMMON_PROPS.getProperty("ipm_col_ipcdir"));		qrh.getTableFieldList()				.add(PluginConstants.COMMON_PROPS						.getProperty("ipm_col_CountryCode"));		qrh.getTableFieldList().add(				PluginConstants.COMMON_PROPS.getProperty("ipm_col_type"));		ipmappingData = (ArrayList<HashMap<String, String>>) MSSQLHelper				.getInstance().retrieveData(qrh);		log.info("IP Mapping Data" + ipmappingData);		return ipmappingData;	}	@Override	public void prepareData() {		ArrayList<HashMap<String, String>> ipmappings = getIPMappings();		if (ipmappings != null) {			responseData					.put(PluginConstants.COMMON_PROPS							.getProperty("table_IPMapping"), ipmappings);		} else {			setErrorMessage(PluginConstants.DATARETRIVALFAILURE);			responseData = null;		}	}	@Override	public Timestamp getLastModifiedDate() {		return MSSQLHelper.getInstance().getLatestDBDate();	}	public static void main(String args[]) {		PluginConstants.PLUGIN_PROPS = PropertyLoader				.loadProperties(PluginConstants.PC_ROOT						+ PluginConstants.CONF_FOLDER						+ "/BizAuthIntegrationServer_HB.properties");		PluginConstants.COMMON_PROPS = PropertyLoader				.loadProperties(PluginConstants.PC_ROOT						+ PluginConstants.CONF_FOLDER + "/Common_HB.properties");		System.out.println(new IPMappingData().getData());	}}